{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","style","gutterBottom","variant","start","end","duration","separator","Date","toDateString","App","state","setState","this","image","src","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05454191.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3PZCZ\",\"card\":\"Cards_card__1bOad\",\"infected\":\"Cards_infected__oBxlM\",\"recovered\":\"Cards_recovered__2MQ5W\",\"deaths\":\"Cards_deaths__3fxBC\",\"n\":\"Cards_n__3y3Wk\"};","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n      confirmed: confirmed.total,\r\n      deaths: deaths.total,\r\n      date,\r\n    }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport { fetchDailyData } from \"../../api\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              style={{ color: \"blue\" }}\r\n              gutterBottom\r\n            >\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\" style={{ color: \"blue\" }}>\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.75}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" style={{ color: \"blue\" }} component=\"p\">\r\n              Number of active cases of COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              style={{ color: \"#00e673\" }}\r\n              gutterBottom\r\n            >\r\n              Recovered\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              component=\"h2\"\r\n              style={{ color: \"#00e673\" }}\r\n            >\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.75}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              style={{ color: \"#00e673\" }}\r\n              component=\"p\"\r\n            >\r\n              Number of recoveries from COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          component={Card}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              style={{ color: \"red\" }}\r\n              gutterBottom\r\n            >\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\" style={{ color: \"red\" }}>\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.75}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" style={{ color: \"red\" }} component=\"p\">\r\n              Number of deaths caused by COVID-19.\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;\r\n","import React from \"react\";\r\n\r\nimport { Cards, CountryPicker, Chart } from \"./components\";\r\nimport { fetchData } from \"./api/\";\r\nimport styles from \"./App.module.css\";\r\n\r\nimport image from \"./images/image.png\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__KfGqz\",\"image\":\"App_image__2eHzR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1mcxU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3JqPV\"};","module.exports = __webpack_public_path__ + \"static/media/image.b33d4fb6.png\";"],"sourceRoot":""}